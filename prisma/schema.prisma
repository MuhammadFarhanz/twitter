generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  name      String?
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  token     String?
  tweets    Tweet[]  @relation("UserTweets")

  likes   Like[]
  Retweet Retweet[]
}

model Tweet {
  id        Int       @id @default(autoincrement())
  content   String?
  authorId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  images    Image[]   @relation("TweetImage")
  likes     Like[]
  retweets  Retweet[]

  replyToId   Int?    @map("reply_to_id")
  parent      Tweet?  @relation("ParentTweet", fields: [replyToId], references: [id])
  replies     Tweet[] @relation("ParentTweet")
  replyImages Image[] @relation("ReplyImage")
  author      User    @relation("UserTweets", fields: [authorId], references: [id])
}

model Image {
  id        Int      @id @default(autoincrement())
  tweetId   Int?
  replyId   Int?
  url       String
  createdAt DateTime @default(now())

  tweet Tweet? @relation(name: "TweetImage", fields: [tweetId], references: [id])
  reply Tweet? @relation(name: "ReplyImage", fields: [replyId], references: [id])
}

model Like {
  id        Int      @id @default(autoincrement())
  tweetId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([tweetId, userId])
}

model Retweet {
  id        Int      @id @default(autoincrement())
  tweetId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tweet Tweet @relation(fields: [tweetId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([tweetId, userId])
}
